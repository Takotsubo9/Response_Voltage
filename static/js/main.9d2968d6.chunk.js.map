{"version":3,"sources":["index.js"],"names":["InputForm","props","handleSliderChange","bind","handleInputChange","handleBlur","e","newValue","this","onValueChange","target","value","Number","className","id","gutterBottom","units","container","spacing","alignItems","item","xs","onChange","margin","onBlur","inputProps","step","min","max","type","React","Component","floorN","n","Math","floor","pow","VoltOutput","resistance","power","deltaTime","tau","capa","String","raw","dataCal","Capa","DeltaTime","data","x","y","i","push","dataCalH","t","exp","GraphView","height","width","items","orientation","top","HEIGHT","title","tickTotal","left","data1","data2","Management","handleChange","state","setState","arr","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d2968d6.chunk.js","sourcesContent":["import React from 'react';\nimport { XYPlot, LineSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis, DiscreteColorLegend } from \"react-vis\";\nimport 'react-vis/dist/style.css';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\n\n\n\nclass InputForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSliderChange = this.handleSliderChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n\n\n  }\n  handleSliderChange(e, newValue) {\n    this.props.onValueChange(newValue);\n  }\n\n  handleInputChange(e) {\n    this.props.onValueChange(e.target.value === '' ? '' : Number(e.target.value));\n  }\n\n  handleBlur(e) {\n    if (e.target.value < 0) {\n      this.props.onValueChange(0);\n    } else if (e.target.value > 1000000) {\n      this.props.onValueChange(1000000);\n    }\n  };\n\n  render() {\n    const value = this.props.value;\n    return (\n      <div className=\"root\">\n        <Typography id=\"input-slider\" gutterBottom>\n          {this.props.id} [{this.props.units}]\n        </Typography>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs>\n            <Slider\n              value={value}\n              onChange={this.handleSliderChange}\n              aria-labelledby=\"input-slider\"\n            />\n          </Grid>\n          <Grid item>\n            <Input\n              className=\"input\"\n              value={value}\n              margin=\"dense\"\n              onChange={this.handleInputChange}\n              onBlur={this.handleBlur}\n              inputProps={{\n                step: 1,\n                min: 0,\n                max: 1000000,\n                type: 'number',\n                'aria-labelledby': 'input-slider',\n              }}\n            />\n          </Grid>\n        </Grid>\n      </div >\n    );\n  }\n}\n\nfunction floorN(value, n) {\n  return Math.floor(value * Math.pow(10, n)) / Math.pow(10, n)\n}\n\nfunction VoltOutput(props) {\n  const resistance = props.resistance;\n  const power = props.power;\n  const deltaTime = props.deltaTime * 0.000001;\n  const capa = props.capa * 0.000001;\n  const tau = resistance * capa;\n  return (\n    <div>\n      <p className=\"formula\">\n        Euler's method: <TeX>{String.raw`v(t+Δt) = \\text{${floorN(1 - deltaTime / tau, 3)}} \\cdot v(t) + \\text{${floorN(deltaTime / tau * power, 3)}}`}</TeX>\n      </p>\n      <p className=\"formula\">\n        Laplace's transform method: <TeX>{String.raw`v(t) = \\text{${power}} \\cdot ( 1 - e^{-\\frac{t}{\\text{${floorN(tau, 4)}}}})`}</TeX>\n      </p>\n    </div>\n  )\n}\n\nfunction dataCal(resistance, Capa, power, DeltaTime) {\n  const capa = Capa * 0.000001;\n  const deltaTime = DeltaTime * 0.000001;\n  const tau = resistance * capa\n  let data = [\n    { x: 0, y: 0 }\n  ];\n  for (let i = 1; i < 101; i++) {\n    data.push({ x: deltaTime * i * 1000, y: ((1 - deltaTime / tau) * data[i - 1].y + deltaTime * power / tau) }) //x:[ms] y:[V]  xはμsからmsにするために*1000している\n  }\n  return data;\n}\n\nfunction dataCalH(resistance, Capa, power, DeltaTime) {\n  const capa = Capa * 0.000001;\n  const deltaTime = DeltaTime * 0.000001;\n  const tau = resistance * capa\n  let data = [\n    { x: 0, y: 0 }\n  ];\n  for (let i = 1; i < 101; i++) {\n    let t = deltaTime * i;\n    data.push({ x: t * 1000, y: power * (1 - Math.exp(-1 * t / tau)) }) //x:[ms] y:[V]  xはμsからmsにするために*1000している\n  }\n  return data;\n}\n\n\n\nfunction GraphView(props) {\n  const HEIGHT = 300;\n  const WIDTH = 800;\n  return (\n    <XYPlot className=\"graph\" height={HEIGHT} width={WIDTH}>\n      <DiscreteColorLegend\n        items={[\"Euler's method\", \"Laplace's transform method\"]}\n        orientation=\"horizontal\"\n      />\n      <XAxis top={HEIGHT - 50} orientation=\"bottom\" title=\"[ms]\" tickTotal={10} />\n      <YAxis left={0} title=\"[V]\" />\n      <LineSeries data={props.data1} />\n      <LineSeries data={props.data2} />\n      <VerticalGridLines />\n      <HorizontalGridLines />\n    </XYPlot>\n  )\n}\n\n\nclass Management extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      resistance: 0,\n      capa: 0,\n      power: 0,\n      deltaTime: 0\n    };\n  }\n\n  handleChange(item, newValue) {\n    this.setState((state) => {\n      return {\n        [item]: newValue\n      }\n    });\n  }\n\n\n\n  render() {\n    const arr = [\n      ['resistance', 'Ω'],\n      ['capa', 'μF'],\n      ['power', 'V'],\n      ['deltaTime', 'μs']\n    ]\n    return (\n      <div >\n        <h1 className=\"title\">Response voltage of RC series circuit v(t)</h1>\n        <GraphView\n          arr={arr}\n          data1={dataCal(\n            Number(this.state.resistance),\n            Number(this.state.capa),\n            Number(this.state.power),\n            Number(this.state.deltaTime)\n          )}\n          data2={dataCalH(\n            Number(this.state.resistance),\n            Number(this.state.capa),\n            Number(this.state.power),\n            Number(this.state.deltaTime)\n          )}\n        />\n        {\n          arr.map(item =>\n            <InputForm\n              onValueChange={newValue => this.handleChange(item[0], newValue)}\n              id={item[0]}\n              units={item[1]}\n              value={this.state[[item[0]]]}\n              key={item[0]}\n            />\n          )\n        }\n        < VoltOutput\n          resistance={Number(this.state.resistance)}\n          capa={Number(this.state.capa)}\n          power={Number(this.state.power)}\n          deltaTime={Number(this.state.deltaTime)}\n        />\n      </div >\n\n    )\n  }\n}\n\n\n\nReactDOM.render(\n  <Management />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}